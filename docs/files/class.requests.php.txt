<?php
/**
 * IRIX PHP Library
 * PHP Version 5.3+.
 *
 * @author Jonathan Beliën <jbe@geo6.be>
 * @copyright 2016 Jonathan Beliën
 * @note The IRIX (International Radiological Information Exchange) format is developed and maintained by IAEA (International Atomic Energy Agency) <https://www.iaea.org/>
 */

namespace IRIX;

/**
 * IRIX PHP Library - Requests Section.
 *
 * @author Jonathan Beliën <jbe@geo6.be>
 */
class Requests
{
    public $request = [];
    public $response = [];

    private $_xml = null;

    public function toXML()
    {
        $this->_xml = new \DOMDocument('1.0', 'UTF-8');
        $this->_xml->formatOutput = \IRIX\Report::_PRETTY;

        $requests = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'req:Requests');
        $this->_xml->appendChild($requests);
        $requests->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:req', \IRIX\Report::_NAMESPACE.'/Requests');
        $requests->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:base', \IRIX\Report::_NAMESPACE.'/Base');
        $requests->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:html', 'http://www.w3.org/1999/xhtml');

        if (!is_null($this->request)) {
            if (!is_array($this->request)) {
                $this->request = [$this->request];
            }
            foreach ($this->request as $r) {
                $requests->appendChild($this->_xml->importNode($r->getXMLElement(), true));
            }
        }
        if (!is_null($this->response)) {
            if (!is_array($this->response)) {
                $this->response = [$this->response];
            }
            foreach ($this->response as $r) {
                $requests->appendChild($this->_xml->importNode($r->getXMLElement(), true));
            }
        }

        return $this->_xml;
    }

    public function getXMLElement()
    {
        $this->toXML();

        return $this->_xml->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Requests')->item(0);
    }

    public function validate($update = true)
    {
        if ($update) {
            $this->toXML();
        }

        return $this->_xml->schemaValidate(__DIR__.'/xsd/'.\IRIX\Report::_VERSION.'/Requests.xsd');
    }

    public static function read($filename)
    {
        if (file_exists($filename)) {
            $xml = new \DOMDocument();
            $xml->load($filename);

            $requests = $xml->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Requests')->item(0);

            if (!is_null($requests)) {
                $r = new self();
                $r->_xml = new \DOMDocument('1.0', 'UTF-8');
                $r->_xml->appendChild($r->_xml->importNode($requests, true));

                if ($r->validate(false)) {
                    $request = $requests->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Request');
                    if ($request->length > 0) {
                        $r->request = [];
                        for ($i = 0; $i < $request->length; $i++) {
                            $r->request[] = \IRIX\Requests\Request::readXMLElement($request->item($i));
                        }
                    }

                    $response = $requests->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Response');
                    if ($response->length > 0) {
                        $r->response = [];
                        for ($i = 0; $i < $response->length; $i++) {
                            $r->response[] = \IRIX\Requests\Response::readXMLElement($response->item($i));
                        }
                    }

                    return $r;
                }
            } else {
                return;
            }
        }

        return false;
    }
}

/* ************************************************************************
 *
 */

namespace IRIX\Requests;

class Request
{
    public $request_uuid;
    public $request_subject;
    public $request_text;

    public $type_of_request = null;
    public $response = null;

    public $metadata = null;

    private $_xml = null;

    public function __construct($subject = null, $text = null)
    {
        $this->request_uuid = \IRIX\Report::UUIDv4();
        if (!is_null($subject) && !is_null($text)) {
            $this->request_subject = $subject;
            $this->request_text = $text;
        }
    }

    public function toXML()
    {
        $this->_xml = new \DOMDocument('1.0', 'UTF-8');
        $this->_xml->formatOutput = \IRIX\Report::_PRETTY;

        $request = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Request');
        $this->_xml->appendChild($request);
        $request->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:req', \IRIX\Report::_NAMESPACE.'/Requests');
        $request->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:base', \IRIX\Report::_NAMESPACE.'/Base');
        $request->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:html', 'http://www.w3.org/1999/xhtml');

        $request_uuid = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestUUID', $this->request_uuid);
        $request->appendChild($request_uuid);
        if (!is_null($this->type_of_request)) {
            $type_of_request = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'TypeOfRequest', $this->type_of_request);
            $request->appendChild($type_of_request);
        }
        $request_subject = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestSubject', $this->request_subject);
        $request->appendChild($request_subject);
        $request_text = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestText', $this->request_text);
        $request->appendChild($request_text);

        if (!is_null($this->response)) {
            $request->appendChild($this->_xml->importNode($this->response->getXMLElement(), true));
        }

        return $this->_xml;
    }

    public function getXMLElement()
    {
        $this->toXML();

        return $this->_xml->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Request')->item(0);
    }

    public static function readXMLElement($domelement)
    {
        $request = new self();

        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestUUID')->item(0);
        if (!is_null($item)) {
            $request->request_uuid = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'TypeOfRequest')->item(0);
        if (!is_null($item)) {
            $request->type_of_request = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestSubject')->item(0);
        if (!is_null($item)) {
            $request->request_subject = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestText')->item(0);
        if (!is_null($item)) {
            $request->request_text = $item->textContent;
        }

        $response = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Response')->item(0);
        if (!is_null($response)) {
            $request->response = \IRIX\Requests\Request\Response::readXMLElement($response);
        }

        return $request;
    }
}

/* ************************************************************************
 *
 */
class Response
{
    public $response_uuid;
    public $request_reference = [];
    public $response_text;

    public $metadata = null;

    private $_xml = null;

    public function __construct($text = null)
    {
        $this->response_uuid = \IRIX\Report::UUIDv4();
        if (!is_null($text)) {
            $this->response_text = $text;
        }
    }

    public function toXML()
    {
        $this->_xml = new \DOMDocument('1.0', 'UTF-8');
        $this->_xml->formatOutput = \IRIX\Report::_PRETTY;

        $response = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Response');
        $this->_xml->appendChild($response);

        $response_uuid = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'ResponseUUID', $this->response_uuid);
        $response->appendChild($response_uuid);
        foreach ($this->request_reference as $r) {
            $response->appendChild($this->_xml->importNode($r->getXMLElement(), true));
        }
        $response_text = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'ResponseText', $this->response_text);
        $response->appendChild($response_text);

        return $this->_xml;
    }

    public function getXMLElement()
    {
        $this->toXML();

        return $this->_xml->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'Response')->item(0);
    }

    public static function readXMLElement($domelement)
    {
        $response = new self();

        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'ResponseUUID')->item(0);
        if (!is_null($item)) {
            $response->response_uuid = $item->textContent;
        }

        $r = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestReference');
        for ($i = 0; $i < $r->length; $i++) {
            $response->request_reference[] = \IRIX\Requests\Response\RequestReference::readXMLElement($r->item($i));
        }

        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'ResponseText')->item(0);
        if (!is_null($item)) {
            $response->response_text = $item->textContent;
        }

        return $response;
    }
}

/* ************************************************************************
 *
 */

namespace IRIX\Requests\Response;

class RequestReference
{
    public $requesting_organisation = null;
    public $date_and_time_of_request = null;
    public $request_uuid = null;
    public $type_of_request = null;
    public $request_subject = null;
    public $request_text = null;

    public $metadata = null;

    private $_xml = null;

    public function toXML()
    {
        $this->_xml = new \DOMDocument('1.0', 'UTF-8');
        $this->_xml->formatOutput = \IRIX\Report::_PRETTY;

        $request_reference = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestReference');
        $this->_xml->appendChild($request_reference);

        if (!is_null($this->requesting_organisation)) {
            $requesting_organisation = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestingOrganisation', $this->requesting_organisation);
            $request_reference->appendChild($requesting_organisation);
        }
        if (!is_null($this->date_and_time_of_request)) {
            $date_and_time_of_request = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'DateAndTimeOfRequest', $this->date_and_time_of_request);
            $request_reference->appendChild($date_and_time_of_request);
        }
        if (!is_null($this->request_uuid)) {
            $request_uuid = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestUUID', $this->request_uuid);
            $request_reference->appendChild($request_uuid);
        }
        if (!is_null($this->type_of_request)) {
            $type_of_request = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'TypeOfRequest', $this->type_of_request);
            $request_reference->appendChild($type_of_request);
        }
        if (!is_null($this->request_subject)) {
            $request_subject = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestSubject', $this->request_subject);
            $request_reference->appendChild($request_subject);
        }
        if (!is_null($this->request_text)) {
            $request_text = $this->_xml->createElementNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestText', $this->request_text);
            $request_reference->appendChild($request_text);
        }

        return $this->_xml;
    }

    public function getXMLElement()
    {
        $this->toXML();

        return $this->_xml->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestReference')->item(0);
    }

    public static function readXMLElement($domelement)
    {
        $request_reference = new self();

        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestingOrganisation')->item(0);
        if (!is_null($item)) {
            $request_reference->requesting_organisation = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'DateAndTimeOfRequest')->item(0);
        if (!is_null($item)) {
            $request_reference->date_and_time_of_request = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestUUID')->item(0);
        if (!is_null($item)) {
            $request_reference->request_uuid = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'TypeOfRequest')->item(0);
        if (!is_null($item)) {
            $request_reference->type_of_request = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestSubject')->item(0);
        if (!is_null($item)) {
            $request_reference->request_subject = $item->textContent;
        }
        $item = $domelement->getElementsByTagNameNS(\IRIX\Report::_NAMESPACE.'/Requests', 'RequestText')->item(0);
        if (!is_null($item)) {
            $request_reference->request_text = $item->textContent;
        }

        return $request_reference;
    }
}

